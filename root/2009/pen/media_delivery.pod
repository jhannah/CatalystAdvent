
=head1 Delivering static media with Catalyst

=head2 Why?

Why would you want to deliver static media with Catalyst at all?

Generally you use the L<Static::Simple|Catalyst::Plugin::Static::Simple>
plugin to serve assets (.css and image files) from the C</root/static> directory.
However for production use you are recommended to configure your webserver
to directly serve the static content as this is B<much> more efficient.

Using an entire application server process (i.e. a perl process) to serve static media
is a massive waste of resources, especially if you're not using a front-end proxy
(as your web server ends up with a heavyweight perl process tied up sending bytes to
a user rather than doing useful work).

However, there are a number of cases where just unconditionally serving the static content
to the user is a bad idea - think protected .pdf documents, think time limited URIs, think
single use (or n-use) download URIs.

Also, how about you have too much media to fit on one physical machine and you're using
something like MogileFS. XXX FIXME LINK

=head2 How?

Well, if your app is small, and as a first implementation, then using the
L<serve_static_file|Catalyst::Plugin::Static::Simple/serve_static_file> method is a good way to
start when prototyping your system.

X-Accel-Redirect

X-Sendfile

=head2 Example

Example web server config for static

Example web server config for reproxying

Example code snippet for one use uris.

Example code snippet for timed uris.


